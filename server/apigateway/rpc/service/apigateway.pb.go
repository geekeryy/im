// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: rpc/service/apigateway.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HistoryMessageRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SessionId      string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                 // 会话ID
	StartTimestamp int64                  `protobuf:"varint,2,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"` // 开始时间戳
	EndTimestamp   int64                  `protobuf:"varint,3,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`       // 结束时间戳
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HistoryMessageRequest) Reset() {
	*x = HistoryMessageRequest{}
	mi := &file_rpc_service_apigateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryMessageRequest) ProtoMessage() {}

func (x *HistoryMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_apigateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryMessageRequest.ProtoReflect.Descriptor instead.
func (*HistoryMessageRequest) Descriptor() ([]byte, []int) {
	return file_rpc_service_apigateway_proto_rawDescGZIP(), []int{0}
}

func (x *HistoryMessageRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *HistoryMessageRequest) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *HistoryMessageRequest) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

type HistoryMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // 消息列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryMessageResponse) Reset() {
	*x = HistoryMessageResponse{}
	mi := &file_rpc_service_apigateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryMessageResponse) ProtoMessage() {}

func (x *HistoryMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_apigateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryMessageResponse.ProtoReflect.Descriptor instead.
func (*HistoryMessageResponse) Descriptor() ([]byte, []int) {
	return file_rpc_service_apigateway_proto_rawDescGZIP(), []int{1}
}

func (x *HistoryMessageResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`            // 消息ID
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`            // 会话ID
	SeqId         int64                  `protobuf:"varint,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`                       // 序列号ID
	MessageType   string                 `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`      // 消息类型
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                                 // 消息内容
	SenderUserId  string                 `protobuf:"bytes,6,opt,name=sender_user_id,json=senderUserId,proto3" json:"sender_user_id,omitempty"` // 消息发送者ID
	Timestamp     int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                            // 消息时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_rpc_service_apigateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_apigateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_rpc_service_apigateway_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Message) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Message) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetSenderUserId() string {
	if x != nil {
		return x.SenderUserId
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SessionListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionListRequest) Reset() {
	*x = SessionListRequest{}
	mi := &file_rpc_service_apigateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionListRequest) ProtoMessage() {}

func (x *SessionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_apigateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionListRequest.ProtoReflect.Descriptor instead.
func (*SessionListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_service_apigateway_proto_rawDescGZIP(), []int{3}
}

func (x *SessionListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SessionListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"` // 会话列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionListResponse) Reset() {
	*x = SessionListResponse{}
	mi := &file_rpc_service_apigateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionListResponse) ProtoMessage() {}

func (x *SessionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_apigateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionListResponse.ProtoReflect.Descriptor instead.
func (*SessionListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_service_apigateway_proto_rawDescGZIP(), []int{4}
}

func (x *SessionListResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`              // 会话ID
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                       // 用户ID
	UserName      string                 `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                 // 用户名
	UserAvatar    string                 `protobuf:"bytes,4,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`           // 用户头像
	LastMessage   string                 `protobuf:"bytes,5,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`        // 最后一条消息
	LastTimestamp int64                  `protobuf:"varint,6,opt,name=last_timestamp,json=lastTimestamp,proto3" json:"last_timestamp,omitempty"` // 最后一条消息时间戳
	UnreadCount   int64                  `protobuf:"varint,7,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`       // 未读消息数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_rpc_service_apigateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_apigateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_rpc_service_apigateway_proto_rawDescGZIP(), []int{5}
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Session) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Session) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Session) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *Session) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *Session) GetLastTimestamp() int64 {
	if x != nil {
		return x.LastTimestamp
	}
	return 0
}

func (x *Session) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

var File_rpc_service_apigateway_proto protoreflect.FileDescriptor

const file_rpc_service_apigateway_proto_rawDesc = "" +
	"\n" +
	"\x1crpc/service/apigateway.proto\x12\n" +
	"apigateway\"\x84\x01\n" +
	"\x15HistoryMessageRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12'\n" +
	"\x0fstart_timestamp\x18\x02 \x01(\x03R\x0estartTimestamp\x12#\n" +
	"\rend_timestamp\x18\x03 \x01(\x03R\fendTimestamp\"I\n" +
	"\x16HistoryMessageResponse\x12/\n" +
	"\bmessages\x18\x01 \x03(\v2\x13.apigateway.MessageR\bmessages\"\xdf\x01\n" +
	"\aMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x15\n" +
	"\x06seq_id\x18\x03 \x01(\x03R\x05seqId\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\tR\vmessageType\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12$\n" +
	"\x0esender_user_id\x18\x06 \x01(\tR\fsenderUserId\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\"-\n" +
	"\x12SessionListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"F\n" +
	"\x13SessionListResponse\x12/\n" +
	"\bsessions\x18\x01 \x03(\v2\x13.apigateway.SessionR\bsessions\"\xec\x01\n" +
	"\aSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x03 \x01(\tR\buserName\x12\x1f\n" +
	"\vuser_avatar\x18\x04 \x01(\tR\n" +
	"userAvatar\x12!\n" +
	"\flast_message\x18\x05 \x01(\tR\vlastMessage\x12%\n" +
	"\x0elast_timestamp\x18\x06 \x01(\x03R\rlastTimestamp\x12!\n" +
	"\funread_count\x18\a \x01(\x03R\vunreadCount2\xb5\x01\n" +
	"\n" +
	"APIGateway\x12N\n" +
	"\vSessionList\x12\x1e.apigateway.SessionListRequest\x1a\x1f.apigateway.SessionListResponse\x12W\n" +
	"\x0eHistoryMessage\x12!.apigateway.HistoryMessageRequest\x1a\".apigateway.HistoryMessageResponseB\fZ\n" +
	"./;serviceb\x06proto3"

var (
	file_rpc_service_apigateway_proto_rawDescOnce sync.Once
	file_rpc_service_apigateway_proto_rawDescData []byte
)

func file_rpc_service_apigateway_proto_rawDescGZIP() []byte {
	file_rpc_service_apigateway_proto_rawDescOnce.Do(func() {
		file_rpc_service_apigateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_service_apigateway_proto_rawDesc), len(file_rpc_service_apigateway_proto_rawDesc)))
	})
	return file_rpc_service_apigateway_proto_rawDescData
}

var file_rpc_service_apigateway_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rpc_service_apigateway_proto_goTypes = []any{
	(*HistoryMessageRequest)(nil),  // 0: apigateway.HistoryMessageRequest
	(*HistoryMessageResponse)(nil), // 1: apigateway.HistoryMessageResponse
	(*Message)(nil),                // 2: apigateway.Message
	(*SessionListRequest)(nil),     // 3: apigateway.SessionListRequest
	(*SessionListResponse)(nil),    // 4: apigateway.SessionListResponse
	(*Session)(nil),                // 5: apigateway.Session
}
var file_rpc_service_apigateway_proto_depIdxs = []int32{
	2, // 0: apigateway.HistoryMessageResponse.messages:type_name -> apigateway.Message
	5, // 1: apigateway.SessionListResponse.sessions:type_name -> apigateway.Session
	3, // 2: apigateway.APIGateway.SessionList:input_type -> apigateway.SessionListRequest
	0, // 3: apigateway.APIGateway.HistoryMessage:input_type -> apigateway.HistoryMessageRequest
	4, // 4: apigateway.APIGateway.SessionList:output_type -> apigateway.SessionListResponse
	1, // 5: apigateway.APIGateway.HistoryMessage:output_type -> apigateway.HistoryMessageResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rpc_service_apigateway_proto_init() }
func file_rpc_service_apigateway_proto_init() {
	if File_rpc_service_apigateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_service_apigateway_proto_rawDesc), len(file_rpc_service_apigateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_service_apigateway_proto_goTypes,
		DependencyIndexes: file_rpc_service_apigateway_proto_depIdxs,
		MessageInfos:      file_rpc_service_apigateway_proto_msgTypes,
	}.Build()
	File_rpc_service_apigateway_proto = out.File
	file_rpc_service_apigateway_proto_goTypes = nil
	file_rpc_service_apigateway_proto_depIdxs = nil
}
